name: Django CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  deployment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout latest code
      uses: actions/checkout@v3
      with:
        ref: master

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y expect rsync

    - name: Copy files to server, excluding venv and .env
      env:
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        expect <<EOF
        spawn rsync -avz --exclude='venv/' --exclude='.env' ./ $SERVER_USER@$SERVER_IP:/home/psiy/
        expect {
          "Are you sure you want to continue connecting" {
            send "yes\r"
            exp_continue
          }
          "password:" {
            send "$SERVER_PASSWORD\r"
          }
        }
        expect eof
        EOF

    - name: Run migrations and restart services
      env:
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        expect <<EOF
        spawn ssh $SERVER_USER@$SERVER_IP
        expect {
          "Are you sure you want to continue connecting" {
            send "yes\r"
            exp_continue
          }
          "password:" {
            send "$SERVER_PASSWORD\r"
          }
        }
        expect "$ "
        send "cd /home/psiy/\r"
        expect "$ "
        send "source venv/bin/activate\r"
        expect "$ "
        send "pip install -r requirements/development.txt\r"
        expect "$ "
        send "python manage.py makemigrations\r"
        expect "$ "
        send "python manage.py migrate\r"
        expect "$ "
        send "sudo systemctl restart psiy.service\r"
        expect "$ "
        send "sudo systemctl reload nginx\r"
        expect "$ "
        send "exit\r"
        expect eof
        EOF
